#!/usr/bin/env python

import webapp2
import jinja2
import os

from google.appengine.ext import db

jinja_environment = jinja2.Environment(autoescape=True,
    loader=jinja2.FileSystemLoader(os.path.join(os.path.dirname	   (__file__), 'templates')))

class Post(db.Model):
    name = db.StringProperty(required = True)
    content = db.TextProperty(required = True)
    date = db.DateTimeProperty(auto_now_add = True)

class Handler(webapp2.RequestHandler):
    def write(self, *a, **kw):
	self.response.out.write(*a, **kw)
    
    def render_str(self, template, **params):
	t = jinja_environment.get_template(template)
	return t.render(params)

    def render(self, template, **kw):
	self.write(self.render_str(template, **kw))
    
class MainHandler(Handler):
    def get(self):
	self.write('Welcome to Yoav\'s place')    

class BlogHandler(Handler):
    def render_front(self, **kw):
	posts = db.GqlQuery("SELECT * FROM Post ORDER BY date DESC")
        
        self.render('front.html', posts=posts, **kw)

    def get(self):
        self.render_front()
    
    def post(self):
	self.redirect('/blog/newpost')
        
class NewHandler(Handler):
    def render_new(self, **kw):
	self.render('newpost.html', **kw)

    def get(self):
	self.render_new()

    def post(self):
	name = self.request.get('name')
	content = self.request.get('content')
	
	if name and content:
	    p = Post(name = name, content = content)
	    p.put()
	    
	    self.redirect('/blog')
        else:
	    error = "Please provide both name and content"
	    self.render_new(error=error, content=content, name=name)


app = webapp2.WSGIApplication([('/', MainHandler),('/blog', BlogHandler), ('/blog/newpost', NewHandler)],
                              debug=True)
